From 05a86b6cd478338851e62678fe52fcf9021677c0 Mon Sep 17 00:00:00 2001
From: Alexey Andriyanov <alan@al-an.info>
Date: Sun, 10 May 2015 20:46:25 +0300
Subject: [PATCH 09/17] check_http: reduce cpu usage

	do MD5 calculation only when configured to do so
---
 keepalived/check/check_http.c   | 21 +++++++++++----------
 keepalived/check/check_ssl.c    |  6 ++++--
 keepalived/include/check_http.h |  2 +-
 3 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/keepalived/check/check_http.c b/keepalived/check/check_http.c
index 7e1a704..c866017 100644
--- a/keepalived/check/check_http.c
+++ b/keepalived/check/check_http.c
@@ -425,7 +425,7 @@ http_handle_response(thread_t * thread, unsigned char digest[16]
 
 /* Handle response stream performing MD5 updates */
 int
-http_process_response(request_t *req, int r)
+http_process_response(request_t *req, int r, int do_md5)
 {
 	req->len += r;
 	if (!req->extracted) {
@@ -433,12 +433,9 @@ http_process_response(request_t *req, int r)
 		     extract_html(req->buffer, req->len))) {
 			req->status_code = extract_status_code(req->buffer, req->len);
 			r = req->len - (req->extracted - req->buffer);
-			if (r) {
-				memmove(req->buffer, req->extracted, r);
-				MD5_Update(&req->context, req->buffer, r);
-				r = 0;
-			}
-			req->len = r;
+			if (r && do_md5)
+				MD5_Update(&req->context, req->extracted, r);
+			req->len = 0;
 		}
 	} else if (req->len) {
 		MD5_Update(&req->context, req->buffer,
@@ -457,6 +454,7 @@ http_read_thread(thread_t * thread)
 	http_checker_t *http_get_check = CHECKER_ARG(checker);
 	http_t *http = HTTP_ARG(http_get_check);
 	request_t *req = HTTP_REQ(http);
+	url_t *url = list_element(http_get_check->url, http->url_it);
 	unsigned timeout = checker->co->connection_to;
 	unsigned char digest[16];
 	int r = 0;
@@ -490,7 +488,8 @@ http_read_thread(thread_t * thread)
 	if (r == -1 || r == 0) {	/* -1:error , 0:EOF */
 
 		/* All the HTTP stream has been parsed */
-		MD5_Final(digest, &req->context);
+		if (url->digest)
+			MD5_Final(digest, &req->context);
 
 		if (r == -1) {
 			/* We have encourred a real read error */
@@ -503,7 +502,7 @@ http_read_thread(thread_t * thread)
 	} else {
 
 		/* Handle response stream */
-		http_process_response(req, r);
+		http_process_response(req, r, (url->digest != NULL));
 
 		/*
 		 * Register next http stream reader.
@@ -527,6 +526,7 @@ http_response_thread(thread_t * thread)
 	http_checker_t *http_get_check = CHECKER_ARG(checker);
 	http_t *http = HTTP_ARG(http_get_check);
 	request_t *req = HTTP_REQ(http);
+	url_t *url = list_element(http_get_check->url, http->url_it);
 	unsigned timeout = checker->co->connection_to;
 
 	/* Handle read timeout */
@@ -538,7 +538,8 @@ http_response_thread(thread_t * thread)
 	req->extracted = NULL;
 	req->len = 0;
 	req->error = 0;
-	MD5_Init(&req->context);
+	if (url->digest)
+		MD5_Init(&req->context);
 
 	/* Register asynchronous http/ssl read thread */
 	if (http_get_check->proto == PROTO_SSL)
diff --git a/keepalived/check/check_ssl.c b/keepalived/check/check_ssl.c
index de6cb93..46cb974 100644
--- a/keepalived/check/check_ssl.c
+++ b/keepalived/check/check_ssl.c
@@ -244,6 +244,7 @@ ssl_read_thread(thread_t * thread)
 	http_checker_t *http_get_check = CHECKER_ARG(checker);
 	http_t *http = HTTP_ARG(http_get_check);
 	request_t *req = HTTP_REQ(http);
+	url_t *url = list_element(http_get_check->url, http->url_it);
 	unsigned timeout = checker->co->connection_to;
 	unsigned char digest[16];
 	int r = 0;
@@ -272,7 +273,7 @@ ssl_read_thread(thread_t * thread)
 				thread->u.fd, timeout);
 	} else if (r > 0 && req->error == 0) {
 		/* Handle response stream */
-		http_process_response(req, r);
+		http_process_response(req, r, (url->digest != NULL));
 
 		/*
 		 * Register next ssl stream reader.
@@ -283,7 +284,8 @@ ssl_read_thread(thread_t * thread)
 	} else if (req->error) {
 
 		/* All the SSL streal has been parsed */
-		MD5_Final(digest, &req->context);
+		if (url->digest)
+			MD5_Final(digest, &req->context);
 		SSL_set_quiet_shutdown(req->ssl, 1);
 
 		r = (req->error == SSL_ERROR_ZERO_RETURN) ? SSL_shutdown(req->ssl) : 0;
diff --git a/keepalived/include/check_http.h b/keepalived/include/check_http.h
index 1dc63f4..fd897fc 100644
--- a/keepalived/include/check_http.h
+++ b/keepalived/include/check_http.h
@@ -96,7 +96,7 @@ extern void install_http_check_keyword(void);
 extern int epilog(thread_t *, int, int, int);
 extern int timeout_epilog(thread_t *, char *);
 extern url_t *fetch_next_url(http_checker_t *);
-extern int http_process_response(request_t *, int);
+extern int http_process_response(request_t *, int, int);
 extern int http_handle_response(thread_t *, unsigned char digest[16]
 				, int);
 #endif
-- 
2.4.6

